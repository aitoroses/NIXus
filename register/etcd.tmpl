
#!/usr/bin/python

import etcd
import sys
from urlparse import urlparse

etcd_host = "{{ .Env.ETCD_HOST }}"
if not etcd_host:
    print "ETCD_HOST not set"
    sys.exit(1)

port = 4001
host = etcd_host

if ":" in etcd_host:
    host, port = etcd_host.split(":")

client = etcd.Client(host=host, port=int(port))

try:
    backends = client.read("/backends")
    frontends = client.read("/frontends")
except (etcd.EtcdKeyNotFound, KeyError):
    client.write("/backends", None, dir=True)
    client.write("/frontends", None, dir=True)
    client.write("/directives", None, dir=True)

{{ $local := . }}
{{ range $key, $value := .}}
{{ $addrLen := len $value.Addresses }}
{{ range $address := $value.Addresses }}

{{ if $address.HostPort}}
{{ with $subdomain := printf "NIXUS_%s" $address.Port }}
{{ if contains $value.Env $subdomain }}
# {{ $subdomain }}

# {{ $value.Name }}
client.write("/backends/{{ $value.Image.Repository }}/{{ $address.Port }}/{{printf "%.*s" 12 $value.ID}}", "{{ $local.Env.HOST_IP }}:{{ $address.HostPort }}", ttl=15)
client.write("/frontends/{{ $value.Image.Repository }}/{{ $address.Port }}", "{{ index $value.Env $subdomain }}", ttl=15)
{{ if contains $value.Env "NIXUS_REWRITE_URL_DISABLE" }}
client.write("/directives/{{ $value.Image.Repository }}/rewrite_url", False, ttl=15)
{{ end }}

{{ end }}
{{ end }}

{{ end }}
{{ end }}
{{end}}

